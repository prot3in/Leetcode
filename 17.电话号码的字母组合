/*
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
数字到字母的映射与电话按键相同。注意 1 不对应任何字母。

示例:
输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
*/
public class Solution {
        IList<string> result = new List<string>();
        Dictionary<char,string> dic = new Dictionary<char, string>()
         {
            {'2', "abc"},
            {'3', "def"},
            {'4', "ghi"},
            {'5', "jkl"},
            {'6', "mno"},
            {'7', "pqrs"},
            {'8', "tuv"},
            {'9', "wxyz"}
        };
        public void backtrack(string digits,string track,int n)
        {
            if (track.Length == digits.Length)
            {
                result.Add(track);
                return;
            }
            for(int i = 0; i < dic[digits[n]].Length; i++)
            {
                track += dic[digits[n]][i];
                backtrack(digits, track, n + 1);
                track = track.Substring(0,n);
            }
        }
        public IList<string> LetterCombinations(string digits)
        {
            if(digits.Length == 0 ) return result;
            string track = "";
            backtrack(digits, track, 0);

            return result;
        }
}
